Cài đặt Vagrant & VirtualBox trên Windows 10
https://www.youtube.com/watch?v=WNsso7zsUHE

Sử dụng Vagrant cài đặt Ubuntu Server
https://www.youtube.com/watch?v=9exu9NHMtNw&list=PLzsF36Xh2Cq1HQIdocIqcZHxuobqqik2L&index=2

CÀI ĐẶT UBUNTU SERVER VỚI VAGRANT
https://sonnguyen.ws/vi/cai-dat-ubuntu-server-voi-vagrant/
Vagrant.configure(2) do |config|
  config.vm.box = "ubuntu/trusty64"
  #config.vm.synced_folder "./", "/build/"
  config.vm.hostname = "dev-server"
  config.vm.network "private_network", ip: "172.20.20.20"

  config.vm.provider "virtualbox" do |vb|
    vb.gui = false
    vb.memory = 2048
    vb.cpus = 1
  end
  config.vm.provision "shell", inline: <<-SHELL
     sudo apt-get update
     sudo apt-get install -y whois git
     sudo useradd -m -p `mkpasswd password` -s /bin/bash dev
     sudo usermod -a -G sudo dev
  SHELL
end
================================================================================
================================================================================
Hướng dẫn tạo máy ảo với Vagrant + VirtualBox
https://www.youtube.com/watch?v=s30E7ssEQWI

https://thachpham.com/tools/tao-may-ao-tren-may-tinh-voi-vagrant-va-virtualbox.html
Một số lệnh Vagrant cơ bản cần thiết
Trong khi dùng Vagrant, có thể bạn sẽ sử dụng rất nhiều một số lệnh dưới đây nên tốt nhất là hãy nhớ chức năng của nó:
vagrant box add – Nạp box.
vagrant box list – Xem danh sách các box.
vagrant box remove NAME

vagrant up
vagrant suspend – Cho máy ảo tạm nghỉ.
vagrant halt – Cho máy ảo đi ngủ, shutdown đó.
vagrant destroy – Cho máy ảo về vườn.
vagrant reload – Tải lại các thiết lập trong file Vagrantfile của máy ảo, khi đổi nội dung file đó, sử dụng lệnh reload này để nạp lại cấu hình.

vagrant ssh
vagrant login – Đăng nhập vào hệ thống Vagrant Cloud.
vagrant share --ssh: Chia sẻ máy ảo của bạn cho người khác truy cập, bạn phải gõ lệnh vagrant login trước khi dùng tính năng này.
================================================================================
================================================================================
$ git add .
warning: LF will be replaced by CRLF in README.md.
The file will have its original line endings in your working directory.

https://stackoverflow.com/questions/17628305/windows-git-warning-lf-will-be-replaced-by-crlf-is-that-warning-tail-backwar/17628353
git config --global core.autocrlf false
================================================================================
================================================================================
https://viblo.asia/p/buoc-dau-lam-quen-voi-vagrant-1VgZvxaM5Aw
config.vm.network "forwarded_port", guest: 3000, host: 8084
================================================================================
================================================================================
https://viblo.asia/p/su-dung-nginx-lam-load-balancer-cho-nhieu-backend-server-gDVK2aJ25Lj
================================================================================
================================================================================
Nginx Load Balancer Setup
https://www.youtube.com/watch?v=XdHrywooTi0
========================================
========================================
Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/trusty64"
  config.vm.hostname = "server02"
  config.vm.network "public_network", ip: "192.168.1.102"

  config.vm.provider "virtualbox" do |vb|
    vb.customize ["modifyvm", :id, "--memory", "1024"]
  end
end
================================================================================
================================================================================
mkdir vgserver
cd vgserver
====================
====================
https://app.vagrantup.com/ubuntu/boxes/trusty64
vagrant box add ubuntu/trusty64
vagrant init ubuntu/trusty64
====================
====================
https://app.vagrantup.com/ubuntu/boxes/xenial64
vagrant box add ubuntu/xenial64
vagrant init ubuntu/xenial64
========================================
========================================
Vagrantfile
# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VESION = "2"
HOST_NAME = "loadbalancer"
HOST_IP = "192.168.1.200"

Vagrant.configure(VAGRANTFILE_API_VESION) do |config|
  config.vm.box = "ubuntu/trusty64"
  config.vm.hostname = HOST_NAME
  config.vm.network "public_network", ip: HOST_IP

  config.vm.provider "virtualbox" do |vb|
    vb.gui = false
    vb.memory = 1024
    vb.cpus = 1
  end
end
========================================
========================================
mkdir loadbalancer
mkdir server01
mkdir server02
========================================
========================================
vagrant up
vagrant status
vagrant ssh
user: vagrant
password: vagrant
====================
====================
How to Set up Virtual Box and Vagrant on Windows
https://www.youtube.com/watch?v=mPBWWu7sZU4
vagrant ssh-config
Host default
  HostName 127.0.0.1
  User vagrant
  Port 2222
  UserKnownHostsFile /dev/null
  StrictHostKeyChecking no
  PasswordAuthentication no
  IdentityFile D:/Vagrant/loadbalancer/.vagrant/machines/default/virtualbox/private_key
  IdentitiesOnly yes
  LogLevel FATAL

ssh vagrant@127.0.0.1 -p 2222 -i D:/Vagrant/loadbalancer/.vagrant/machines/default/virtualbox/private_key
Permission denied (publickey).
It is happen on Ubuntu 16.04 LTS (Xenial Xerus) ubuntu/xenial64
Using ubuntu/trusty64 instead of ubuntu/xenial64

vagrant halt
vagrant destroy
====================
====================
ping
sudo apt-get update
========================================
========================================
loadbalancer
sudo apt-get install -y nginx
====================
====================
server01
server02
sudo apt-get install -y nodejs npm
====================
====================
loadbalancer
ls -al /etc/nginx/nginx.conf
sudo cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.backup
sudo vim /etc/nginx/nginx.conf
worker_processes 1;
events {
  worker_connections 1024;
}

http {
  upstream servers {
    server 192.168.1.101:8081;
    server 192.168.1.102:8082;
  }

  server {
    listen 8080;

    location / {
      proxy_pass http://servers;
    }
  }
}

sudo cat /etc/nginx/nginx.conf
sudo service nginx restart
==========
==========
https://codeyarns.com/2011/04/18/how-to-delete-all-lines-of-file-in-vim/
https://stackoverflow.com/questions/11828270/how-to-exit-the-vim-editor
Type gg to move the cursor to the first line of the file, if it is not already there.
Type dG to delete all the lines.
:wq to write and quit
gg
dG
Esc > :wq
====================
====================
server01
server02
sudo ln -s /usr/bin/nodejs /usr/bin/node
sudo npm install -g http-server
==========
==========
npm http GET https://registry.npmjs.org/http-server
npm http GET https://registry.npmjs.org/http-server
npm http GET https://registry.npmjs.org/http-server
npm ERR! Error: CERT_UNTRUSTED
npm ERR!     at SecurePair.<anonymous> (tls.js:1370:32)
npm ERR!     at SecurePair.EventEmitter.emit (events.js:92:17)
npm ERR!     at SecurePair.maybeInitFinished (tls.js:982:10)
npm ERR!     at CleartextStream.read [as _read] (tls.js:469:13)
npm ERR!     at CleartextStream.Readable.read (_stream_readable.js:320:10)
npm ERR!     at EncryptedStream.write [as _write] (tls.js:366:25)
npm ERR!     at doWrite (_stream_writable.js:223:10)
npm ERR!     at writeOrBuffer (_stream_writable.js:213:5)
npm ERR!     at EncryptedStream.Writable.write (_stream_writable.js:180:11)
npm ERR!     at write (_stream_readable.js:583:24)
npm ERR! If you need help, you may report this log at:
npm ERR!     <http://github.com/isaacs/npm/issues>
npm ERR! or email it to:
npm ERR!     <npm-@googlegroups.com>

npm ERR! System Linux 3.13.0-144-generic
npm ERR! command "/usr/bin/nodejs" "/usr/bin/npm" "install" "-g" "http-server"
npm ERR! cwd /home/vagrant
npm ERR! node -v v0.10.25
npm ERR! npm -v 1.3.10
npm ERR!
npm ERR! Additional logging details can be found in:
npm ERR!     /home/vagrant/npm-debug.log
npm ERR! not ok code 0

https://github.com/npm/npm/issues/20203
before_install:
  - "npm config set strict-ssl false"

sudo npm config set strict-ssl false
sudo npm install -g http-server
==========
==========
ls -al /vagrant/www
cd /vagrant/www
ls
index.html
sudo http-server -p 80
==========
==========
sudo http-server -p 80
/usr/local/lib/node_modules/http-server/node_modules/ecstatic/lib/ecstatic.js:5
const path = require('path');
^^^^^
SyntaxError: Use of const in strict mode.
    at Module._compile (module.js:439:25)
    at Object.Module._extensions..js (module.js:474:10)
    at Module.load (module.js:356:32)
    at Function.Module._load (module.js:312:12)
    at Module.require (module.js:364:17)
    at require (module.js:380:17)
    at Object.<anonymous> (/usr/local/lib/node_modules/http-server/lib/http-server.js:5:16)
    at Module._compile (module.js:456:26)
    at Object.Module._extensions..js (module.js:474:10)
    at Module.load (module.js:356:32)

sudo npm uninstall -g http-server
sudo rm -rf /usr/bin/node
sudo apt-get remove --purge nodejs npm
====================
====================
curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.9/install.sh | bash
source ~/.bashrc
nvm --version
nvm install 9.11.1
node -v
npm -v
npm install -g http-server
http-server -p 80
==========
==========
http-server -p 80
events.js:165
      throw er; // Unhandled 'error' event
      ^

Error: listen EACCES 0.0.0.0:80
    at Server.setupListenHandle [as _listen2] (net.js:1329:19)
    at listenInCluster (net.js:1387:12)
    at doListen (net.js:1502:7)
    at process._tickCallback (internal/process/next_tick.js:178:19)
    at Function.Module.runMain (internal/modules/cjs/loader.js:697:11)
    at startup (internal/bootstrap/node.js:201:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:516:3)
Emitted 'error' event at:
    at emitErrorNT (net.js:1366:8)
    at process._tickCallback (internal/process/next_tick.js:178:19)
    [... lines matching original stack trace ...]
    at bootstrapNodeJSCore (internal/bootstrap/node.js:516:3)

http-server -p 8080
====================
====================
curl 192.168.1.101
curl 192.168.1.102
curl 192.168.1.100
curl 192.168.1.100
curl 192.168.1.100
========================================
========================================
================================================================================
================================================================================
NOTOK
vagrant up
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Importing base box 'ubuntu/trusty64'...
==> default: Matching MAC address for NAT networking...
==> default: Checking if box 'ubuntu/trusty64' is up to date...
==> default: Setting the name of the VM: server02_default_1524390197913_8514
==> default: Clearing any previously set forwarded ports...
==> default: Clearing any previously set network interfaces...
==> default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==> default: Forwarding ports...
    default: 8082 (guest) => 8082 (host) (adapter 1)
    default: 22 (guest) => 2222 (host) (adapter 1)
==> default: Running 'pre-boot' VM customizations...
==> default: Booting VM...
==> default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: password
    default:
    default: Inserting generated public key within guest...
    default: Removing insecure key from the guest if its present...
    default: Key inserted! Disconnecting and reconnecting using new SSH key...
    default: Warning: Remote connection disconnect. Retrying...
    default: Warning: Remote connection disconnect. Retrying...
    default: Warning: Remote connection disconnect. Retrying...
    default: Warning: Remote connection disconnect. Retrying...
    default: Warning: Remote connection disconnect. Retrying...
========================================
========================================
OK
vagrant reload
==> default: Checking if box 'ubuntu/trusty64' is up to date...
==> default: Clearing any previously set network interfaces...
==> default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==> default: Forwarding ports...
    default: 8082 (guest) => 8082 (host) (adapter 1)
    default: 22 (guest) => 2222 (host) (adapter 1)
==> default: Running 'pre-boot' VM customizations...
==> default: Booting VM...
==> default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: password
==> default: Machine booted and ready!
==> default: Checking for guest additions in VM...
    default: The guest additions on this VM do not match the installed version of
    default: VirtualBox! In most cases this is fine, but in rare cases it can
    default: prevent things such as shared folders from working properly. If you see
    default: shared folder errors, please make sure the guest additions within the
    default: virtual machine match the version of VirtualBox you have installed on
    default: your host and reload your VM.
    default:
    default: Guest Additions Version: 4.3.36
    default: VirtualBox Version: 5.2
==> default: Setting hostname...
==> default: Configuring and enabling network interfaces...
==> default: Mounting shared folders...
    default: /vagrant => D:/Vagrant/server02
==> default: Machine already provisioned. Run `vagrant provision` or use the `--provision`
==> default: flag to force provisioning. Provisioners marked to run always will still run.
========================================
========================================
Vagrantfile
# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/trusty64"
  config.vm.hostname = "server02"
  config.vm.network :public_network, ip: "192.168.1.102"
  config.ssh.password = "vagrant"

  config.vm.provider "virtualbox" do |vb|
    vb.memory = 512
    vb.cpus = 1
  end
end
====================
====================
vagrant ssh-config
Host default
  HostName 127.0.0.1
  User vagrant
  Port 2222
  UserKnownHostsFile /dev/null
  StrictHostKeyChecking no
  PasswordAuthentication no
  IdentityFile C:/Users/User/.ssh/id_rsa
  IdentitiesOnly yes
  LogLevel FATAL
====================
====================
ssh vagrant@127.0.0.1 -p 2222 -i D:/Vagrant/server02/.vagrant/machines/default/virtualbox/private_key
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!
Someone could be eavesdropping on you right now (man-in-the-middle attack)!
It is also possible that a host key has just been changed.
The fingerprint for the ECDSA key sent by the remote host is
SHA256:Ppuu2rwAgNRgYbkHSH9hzsrGEkp4pIl0MgDnStxZCbQ.
Please contact your system administrator.
Add correct host key in /c/Users/User/.ssh/known_hosts to get rid of this message.
Offending ECDSA key in /c/Users/User/.ssh/known_hosts:6
ECDSA host key for [127.0.0.1]:2222 has changed and you have requested strict checking.
Host key verification failed.
====================
====================
rm -f /c/Users/User/.ssh/known_hosts
cp /c/Users/User/.ssh/id_rsa D:/Vagrant/server02/.vagrant/machines/default/virtualbox/private_key
cp: cannot create regular file 'D:/Vagrant/server02/.vagrant/machines/default/virtualbox/private_key': Permission denied

Properties > Security > Edit > Add
users > Check names > OK
Allow: Full control
====================
====================
ssh vagrant@127.0.0.1 -p 2222 -i D:/Vagrant/server02/.vagrant/machines/default/virtualbox/private_key
The authenticity of host '[127.0.0.1]:2222 ([127.0.0.1]:2222)' cant be established.
ECDSA key fingerprint is SHA256:Ppuu2rwAgNRgYbkHSH9hzsrGEkp4pIl0MgDnStxZCbQ.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '[127.0.0.1]:2222' (ECDSA) to the list of known hosts.
Load key "D:/Vagrant/server02/.vagrant/machines/default/virtualbox/private_key": Permission denied
vagrant@127.0.0.1s password:
Welcome to Ubuntu 14.04.5 LTS (GNU/Linux 3.13.0-144-generic x86_64)
================================================================================
================================================================================
